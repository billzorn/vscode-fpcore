{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "FPCore",
    "patterns": [
	{
	    "include": "#keywords"
	},
        {
	    "include": "#constants"
	},
	{
	    "include": "#strings"
	}
    ],
    "repository": {
	"keywords": {
	    "patterns": [
                {
		    "name": "keyword.fpcore",
		    "match": "(?<![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])FPCore(?![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])"
		},
                {
		    "name": "keyword.other.fpcore",
		    "match": "(?<![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])(if|let|while)(?![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])"
		},
                {
		    "name": "keyword.control.fpcore",
		    "match": "(?<![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])(\\+|-|\\*|/|fabs|fma|exp|exp2|expm1|log|log10|log2|log1p|pow|sqrt|cbrt|hypot|sin|cos|tan|asin|acos|atan|atan2|sinh|cosh|tanh|asinh|acosh|atanh|erf|erfc|tgamma|lgamma|ceil|floor|fmod|remainder|fmax|fmin|fdim|copysign|trunc|round|nearbyint|<|>|<=|>=|==|!=|and|or|not|isfinite|isinf|isnan|isnormal|signbit|cast|digits)(?![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])"
		},
                {
		    "name": "storage.type.fpcore",
		    "match": "(?<![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])(!)(?![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])"
		},
                {
		    "name": "storage.modifier.fpcore",
		    "match": "(?<![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])([:][a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:]*)(?![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])"
		}
            ]
	},
        "constants": {
	    "patterns": [
                {
		    "name": "constant.numeric.fpcore",
		    "match": "(?<![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])(E|LOG2E|LOG10E|LN2|LN10|PI|PI_2|PI_4|M_1_PI|M_2_PI|M_2_SQRTPI|SQRT2|SQRT1_2|INFINITY|NAN|TRUE|FALSE)(?![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])"
		},
                {
		    "name": "constant.numeric.rational.fpcore",
		    "match": "(?<![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])([+-]?[0-9]+/[0-9]*[1-9][0-9]*)(?![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])"
		},
                {
		    "name": "constant.numeric.hexadecimal.fpcore",
		    "match": "(?<![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])([+-]?0x([0-9a-f]+(\\.[0-9a-f]+)?|\\.[0-9a-f]+)(p[-+]?[0-9]+)?)(?![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])"
		},
                {
		    "name": "constant.numeric.decimal.fpcore",
		    "match": "(?<![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])([-+]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)(e[-+]?[0-9]+)?)(?![a-zA-Z0-9~!@$%^&*_\\-+=<>.?/:])"
		}
            ]
	},
	"strings": {
	    "name": "string.quoted.double.fpcore",
	    "begin": "\"",
	    "end": "\"",
	    "patterns": [
		{
		    "name": "constant.character.escape.fpcore",
		    "match": "\\\\."
		}
	    ]
	}
    },
    "scopeName": "source.fpcore"
}
